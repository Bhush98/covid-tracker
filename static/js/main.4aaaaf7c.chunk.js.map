{"version":3,"sources":["Styles.module.css","components/Cards.js","components/Chart.js","components/CountryPicker.js","api/fetchData.js","App.js","index.js","components/styles/Card.module.css","components/styles/Chart.module.css","components/styles/CountryPicker.module.css"],"names":["module","exports","Cards","data","NewConfirmed","NewRecovered","NewDeaths","date","className","styles","container","Grid","spacing","justify","item","xs","md","Card","cardStyle","CardContent","Typography","color","gutterBottom","variant","component","start","end","duration","Date","toDateString","Chart","labels","datasets","label","backgroundColor","options","legend","display","title","text","align","CountryPicker","props","country","countries","map","key","Country","value","FormControl","formControl","NativeSelect","defaultValue","onChange","e","handleChange","target","FormHelperText","fetchData","axios","create","url","fetchCountries","App","state","Globaldata","countryName","countryData","dataFlag","getData","a","get","then","response","console","log","setState","Global","catch","error","getCountries","getCountry","cData","Confirmed","Recovered","Deaths","this","toString","style","textAlign","fontSize","marginTop","marginBottom","fontWeight","textDecoration","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4aaaaf7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"countryHeader\":\"Styles_countryHeader__3uvcJ\"};","import React from 'react'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Countup from 'react-countup'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport styles from './styles/Card.module.css'\r\n\r\nconst Cards = ({ data : { NewConfirmed , NewRecovered , NewDeaths} , date}) => {\r\n    return(\r\n    <div className = {styles.container}>\r\n    <Grid container spacing={3} justify={'center'}>\r\n        <Grid item xs = {12} md = {3}>\r\n        <Card className={styles.cardStyle}>\r\n              <CardContent>\r\n                  <Typography color = \"textSecondary\" gutterBottom>\r\n                      Infected\r\n                      </Typography>\r\n                  <Typography variant = \"h5\" component=\"h2\">\r\n                     <Countup start ={0} end = {NewConfirmed} duration = {2}/>\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">\r\n              {new Date(date).toDateString()}\r\n            </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n              Number of active cases of COVID-19.\r\n            </Typography>\r\n                  </CardContent>  \r\n            </Card>\r\n            </Grid>\r\n            <Grid item xs ={12} md={3}>\r\n            <Card className={styles.cardStyle}>\r\n            <CardContent>\r\n            <Typography color = \"textSecondary\" gutterBottom>\r\n                      Recovered\r\n                      </Typography>\r\n                  <Typography variant = \"h5\" component=\"h2\">\r\n                     <Countup start ={0} end = {NewRecovered} duration = {2}/>\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">\r\n              {new Date(date).toDateString()}\r\n            </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n              Number of recovered cases from COVID-19.\r\n            </Typography>\r\n            </CardContent>\r\n          </Card>\r\n          </Grid>\r\n         <Grid item xs={12} md= {3}>\r\n          <Card className={styles.cardStyle}>\r\n          <CardContent>\r\n          <Typography color = \"textSecondary\" gutterBottom>\r\n                      Deaths\r\n                      </Typography>\r\n                  <Typography variant = \"h5\" component=\"h2\">\r\n                     <Countup start ={0} end = {NewDeaths} duration = {2}/>\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\">\r\n              {new Date(date).toDateString()}\r\n            </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n              Number of Deaths caused by COVID-19.\r\n            </Typography>\r\n              </CardContent>  \r\n        </Card>\r\n        </Grid>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default Cards","import React from 'react'\r\nimport {Bar } from 'react-chartjs-2'\r\nimport styles from './styles/Chart.module.css'\r\n\r\nconst Chart  = ({ data : { NewConfirmed , NewRecovered , NewDeaths}}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n       <Bar className= {styles.container}\r\n       data = {\r\n           {\r\n               labels : ['Infected' , 'Recovered' , 'Deaths'],\r\n               datasets : [\r\n                   {\r\n                       label : 'People',\r\n                       backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                       data : [NewConfirmed , NewRecovered , NewDeaths]\r\n                   }\r\n               ]\r\n           }\r\n       }\r\n       options = {{\r\n           legend : { display : false},\r\n           title : { display : true , text : 'Current State of COVID-19 around globe' , color : 'white' , align : 'center'},\r\n       }}/>\r\n       </div>\r\n    )\r\n} \r\nexport default Chart","import React from 'react' \r\nimport styles from './styles/CountryPicker.module.css'\r\nimport NativeSelect from '@material-ui/core/NativeSelect'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\n\r\nconst CountryPicker = props => {\r\n    const country = props.countries.map( country => <option key ={`${country.Country}`} value = {`${country.Country}`}>{country.Country}</option>)\r\n    return (\r\n        <div className = {styles.container}>\r\n        <FormControl className = {styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange = {(e) => props.handleChange(e.target.value)}>\r\n                <option value='Global'>Global</option>\r\n                {country}\r\n                </NativeSelect>\r\n                <FormHelperText>Please select the country for which you want stats</FormHelperText>\r\n            </FormControl>\r\n            </div>\r\n            \r\n    )\r\n    }\r\n\r\nexport default CountryPicker","import axios from 'axios'\r\n\r\nexport const fetchData =  axios.create({\r\n    url : 'https://api.covid19api.com/summary'\r\n})\r\n\r\nexport const fetchCountries = axios.create(\r\n    {\r\n        url : 'https://api.covid19api.com/countries'\r\n    }\r\n)\r\n","import React from 'react'\r\nimport Cards from './components/Cards'\r\nimport Chart from './components/Chart'\r\nimport CountryPicker from './components/CountryPicker'\r\nimport {fetchData , fetchCountries} from './api/fetchData'\r\nimport axios from 'axios'\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        Globaldata : {},\r\n        countries : [],\r\n        countryName : \"Global\",\r\n        countryData : [],\r\n        dataFlag : false\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData()\r\n        this.getCountries()\r\n    }\r\n\r\n    getData = async() =>\r\n    {  \r\n        await fetchData.get().then(response => {\r\n            console.log(response.data)\r\n            console.log('getData consolelog')\r\n            this.setState({\r\n                Globaldata : response.data.Global,\r\n                dataFlag : true\r\n        })}).catch(error => {\r\n            console.log(error)\r\n            this.setState({\r\n                dataFlag : false\r\n            })\r\n        })\r\n    }\r\n\r\n    getCountries = async() => {\r\n        await fetchCountries.get().then(response => {\r\n            console.log(response)\r\n            console.log('getCountries consolelog')\r\n            this.setState({\r\n                countries : response.data,\r\n                dataFlag : true\r\n        })}).catch(error => {\r\n            console.log(error)\r\n            this.setState({\r\n                dataFlag : false\r\n            })\r\n        })\r\n    }\r\n\r\n    getCountry = async(country) => {\r\n        if(country !== \"Global\"){\r\n        await axios.get(`https://api.covid19api.com/live/country/${country}/status/confirmed`).then(response => {\r\n            console.log(response.data[0])\r\n            console.log('getCountry consolelog')\r\n            const cData = response.data[0]\r\n            this.setState({\r\n                countryName : cData.Country,\r\n                countryData : {\r\n                    NewConfirmed : cData.Confirmed,\r\n                    NewRecovered : cData.Recovered,\r\n                    NewDeaths : cData.Deaths,\r\n                },dataFlag : true\r\n        })}).catch(error => {\r\n            console.log(error)\r\n            this.setState({\r\n                dataFlag : false\r\n            })\r\n        })\r\n        }\r\n        else {\r\n            console.log('I am in the else part of getCountry')\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => { \r\n        this.setState({ countryName : e})\r\n        this.getCountry(e)\r\n    }\r\n\r\n    render()\r\n    {\r\n        const date = new Date().toString() \r\n        if(this.state.dataFlag){\r\n            const data = (this.state.countryName === \"Global\" ? this.state.Globaldata : this.state.countryData)\r\n            console.log(data)\r\n        return(\r\n            <div>\r\n                <div style = {{textAlign : 'center' , fontSize : '30px' , marginTop : '3%' , marginBottom : '2%' , fontWeight : 'bolder'}}>COVID-19 Tracker</div>\r\n                <div style = {{ textAlign : 'center' , color : 'black' , textDecoration : 'underline'}}><h1>{this.state.countryName}</h1></div>\r\n                <Cards data = {data} date = {date}/>\r\n                <CountryPicker countries = {this.state.countries} handleChange = {this.handleChange}/>\r\n                <Chart data = {data}/>\r\n                </div>)}\r\n                else {\r\n                    return <div><h1 style={{ textAlign : 'center' , marginTop:'50%'}}>Loading... Error fetching data, Please try after some time</h1></div>\r\n                }\r\n         \r\n}}\r\nexport default App ","import React from 'react' \r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './Styles.module.css'\r\n\r\nReactDOM.render(<App /> , document.querySelector('#root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3auck\",\"cardStyle\":\"Card_cardStyle__1G9_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1vUZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__295pE\",\"formControl\":\"CountryPicker_formControl__3IfuR\"};"],"sourceRoot":""}